[user]
	name = Harris Enniss
	email = henniss@transphormusa.com
[alias]
        # All log commands should capture topology clearly, unless
        # indicated otherwise.

        # lg: Show a short summary of recent work. 

        # The not condition basically looks for the merge base of the
        # most recent commit to a branch, together with master@{1} (or
        # master@{0} as a fallback)
        lg = "!git log --graph --oneline --decorate --all --boundary --not $(git merge-base $(git rev-list --branches -n 1) $(git rev-list master@{1} 2> /dev/null || git rev-list master))"

        # lgd: (d)etails. Similar to lg, but only up to master@{0}, and with full commit message. 
	lgd = "!git log --graph --decorate --all --boundary --not $(git merge-base $(git rev-list --branches -n 1) master)"

        # lga: (a)ll. Show entire repo as a graph. 
        lga = log --graph --oneline --decorate --all --boundary

        # lgt: (t)opilogical. Show only decorations. 
	lgt = log --graph --oneline --decorate --branches --remotes --tags --simplify-by-decoration --boundary

	fpush = push --force-with-lease

	co = checkout
	fixup = commit --fixup
	upush = push --set-upstream origin HEAD
        merge-to = "!gitmergeto() { git push \"`git rev-parse --show-toplevel`\" `git rev-parse --abbrev-ref HEAD`:$1; } && gitmergeto"
        bclean = "!git branch --merged | egrep -v \"(^\\*|development|dev|master)\" "
	idiff = diff --cached
	fa = fetch --all

[core]
	autocrlf = input
	editor = emacs -Q -nw
[apply]
	whitespace = fix
[rebase]
	autosquash = true
	stat = False
	missingCommitsCheck = warn
[diff]
	algorithm = patience
[merge]
	defaultToUpstream = true
[branch]
	autosetupmerge = true
[rerere]
	enabled = true
[advice]
	detachedHead = false
[fetch]
	prune = true
